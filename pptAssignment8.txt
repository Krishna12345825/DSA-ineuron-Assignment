          Assignment Questions 8


Q1.What is ORM in Hibernate?
ans:-- Object Relational Model is a programming technique. This technique is used to convert the data from an incompatible type to that of a relational database. 
              The mapping is done by using the OOP languages. For example every table in a table is represented by an object.
- The purpose of ORM is an application is allowed and written OOP language that is to deal with the data that is manipulates in the forms objects. The class level attributes are ‘mapped’ to tables.


Q2.What are the advantages of Hibernate over JDBC?
ans:-  - The advantages of Hibernate over JDBC are:
1. Hibernate code will work well for all databases, for ex: Oracle,MySQL, etc. where as JDBC is database specific.
2. No knowledge of SQL is needed because Hibernate is a set of objects and a table is treated as an object, where as to work with JDBC, one need to know SQL.
3. Query tuning is not required in Hibernate. The query tuning is automatic in hibernate by using criteria queries, and the result of performance is at its best. Where as in JDBC the query tuning is to be done by the database authors.
4. With the support of cache of hibernate, the data can be placed in the cache for better performance. Where as in JDBC the java cache is to be implemented


Q3.What are some of the important interfaces of Hibernate framework?
ans:-  1. Session Interface : The basic interface for all hibernate applications. The instances are light weighted and can be created and destroyed without expensive process.
2. SessionFactory interface : The delivery of session objects to hibernate applications is done by this interface. For the whole application, there will be generally one SessionFactory and can be shared by all the application threads.
3. Configuration Interface : Hibernate bootstrap action is configured by this interface. The location specification is specified by specific mapping documents, is done by the instance of this interface.
4. Transaction Interface : This is an optional interface. This interface is used to abstract the code from a transaction that is implemented such as a JDBC / JTA transaction.
5. Query and Criteria interface : The queries from the user are allowed by this interface apart from controlling the flow of the query execution.



Q4.What is a Session in Hibernate?
ans:- A Session is used to get a physical connection with a database. The Session object is lightweight and designed to be instantiated each time an interaction is needed with the database. Persistent objects are saved and retrieved through a Session object.
The session objects should not be kept open for a long time because they are not usually thread safe and they should be created and destroyed them as needed. The main function of the Session is to offer, create, read,
 and delete operations for instances of mapped entity classes.


Q5.What is a SessionFactory?
ans:- SessionFactory is an interface. SessionFactory can be created by providing Configuration object, which will contain all DB related property details pulled from either hibernate.cfg.xml file or hibernate.properties file. SessionFactory is a factory for Session objects.
We can create one SessionFactory implementation per database in any application. If your application is referring to multiple databases, then you need to create one SessionFactory per database.
The SessionFactory is a heavyweight object; it is usually created during application start up and kept for later use. The SessionFactory is a thread safe object and used by all the threads of an application.


Q6.What is HQL?
ans:-Hibernate Query Language (HQL) is same as SQL (Structured Query Language) but it doesn't depends on the table of the database. Instead of table name, we use class name in HQL. So it is database independent query language.
Advantage of HQL
There are many advantages of HQL. They are as follows:
database independent
supports polymorphic queries
easy to learn for Java Programmer


Q7.What are Many to Many associations?
ans:-A many-to-many relationship refers to a relationship between tables in a database when a parent row in one table contains several child rows in the second table, and vice versa. Many-to-many relationships are often tricky to represent.

Q8.What is hibernate caching?
ans:- Hibernate caching improves the performance of the application by pooling the object in the cache. It is useful when we have to fetch the same data multiple times.

There are mainly two types of caching:

First Level Cache, and
Second Level Cache

First Level Cache
Session object holds the first level cache data. It is enabled by default. The first level cache data will not be available to entire application. An application can use many session object.
Second Level Cache
SessionFactory object holds the second level cache data. The data stored in the second level cache will be available to entire application. But we need to enable it explicitely


Q9.What is the difference between first level cache and second level cache?
ans:-    First level cache
First level cache is a session level cache and it is always associated with session level object
It is enabled by default.
It is available for a session 
No Extra configuration required 

Second level cache
Second level cache is session factory level cache and it is available across all sessions
It is not enabled by default.
It is available across all session.
We have to decide  which concurrency strategy to use and also need to configure cache expiration and physical cache attributes.



Q10.What can you tell about Hibernate Configuration File?
ans:--  Hibernate Configuration File(cfg file) is the file loaded into an hibernate application when working with hibernate.Hibernate uses this file to establish connection to the database server.It is an XML file which is used to define below information.Standard name for this file is hibernate.cfg.xml.
DataBase connection details: Driver class, URL, username and Password.
Hibernate properties: Dialect, show_sql, second_level_cache .etc
Mapping files names.







